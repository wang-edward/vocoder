
/*
    This file was auto-generated by the cmaj VScode extension!
    https://cmajor.dev
*/

// Here's a very simple graph that plays a sine-wave to get you started..
graph vocoder  [[ main ]]
{
    // Our processor has a single floating point output stream:
    input stream float in;
    output stream float out;

    node {
      voices = Voice[14];
      freq = FreqGen(100);
      freq1 = FreqGen(100);
      freq2 = FreqGen(143);
      freq3 = FreqGen(203);
      freq4 = FreqGen(289);
      freq5 = FreqGen(412);
      freq6 = FreqGen(488);
      freq7 = FreqGen(838);
      freq8 = FreqGen(1194);
      freq9 = FreqGen(1701);
      freq10 = FreqGen(2424);
      freq11 = FreqGen(3455);
      freq12 = FreqGen(4924);
      freq13 = FreqGen(7017);
      freq14 = FreqGen(10000);
      sineC = std::oscillators::Sine (float, 262 * 3);
    }

    connection {
      // freq1 -> voices[0].frequency;
      voices[0] -> out;
    }
}

graph Voice {
  input filter.frequency;
  input stream float source;
  input stream float in;
  output stream float out;
  node {
    filter = std::filters (float)::tpt::svf::Processor(2);

  }
  connection {
    in -> filter.in;
    filter.out -> out;
  }
}

processor FreqGen (float frequency = 0) {
  output event float frequencyOut;
  void main() {
    frequencyOut <- frequency; 
    advance();
  }
}